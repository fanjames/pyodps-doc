# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2018, The Alibaba Group Holding Ltd.
# This file is distributed under the same license as the PyODPS package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PyODPS 0.7.16\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-06-11 13:18+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.5.3\n"

#: ../../source/interactive.rst:5
msgid "交互体验增强"
msgstr ""

#: ../../source/interactive.rst:8
msgid "命令行增强"
msgstr ""

#: ../../source/interactive.rst:10
msgid "PyODPS 提供了命令行下的增强工具。首先，用户可以在任何地方配置了帐号以后，下次就无需再次输入帐号信息。"
msgstr ""

#: ../../source/interactive.rst:15
msgid "from odps.inter import setup, enter, teardown"
msgstr ""

#: ../../source/interactive.rst:16
msgid "接着就可以配置帐号"
msgstr ""

#: ../../source/interactive.rst:21
msgid ""
"setup('**your-access_id**', '**your-access-key**', '**your-project**', "
"endpoint='**your-endpoint**')"
msgstr ""

#: ../../source/interactive.rst:22
msgid "在不指定\\ ``room``\\ 这个参数时，会被配置到叫做\\ ``default``\\ 的room里。"
msgstr ""

#: ../../source/interactive.rst:24
msgid "以后，在任何命令行打开的地方，都可以直接调用："
msgstr ""

#: ../../source/interactive.rst:29
msgid "room = enter()"
msgstr ""

#: ../../source/interactive.rst:30
msgid "我们可以拿到ODPS的入口："
msgstr ""

#: ../../source/interactive.rst:35
msgid "o = room.odps"
msgstr ""

#: ../../source/interactive.rst:39
msgid "o.get_table('dual')"
msgstr ""

#: ../../source/interactive.rst:42 ../../source/interactive.rst:107
#: ../../source/interactive.rst:201
msgid ""
"odps.Table\n"
"  name: odps_test_sqltask_finance.`dual`\n"
"  schema:\n"
"    c_int_a                 : bigint\n"
"    c_int_b                 : bigint\n"
"    c_double_a              : double\n"
"    c_double_b              : double\n"
"    c_string_a              : string\n"
"    c_string_b              : string\n"
"    c_bool_a                : boolean\n"
"    c_bool_b                : boolean\n"
"    c_datetime_a            : datetime\n"
"    c_datetime_b            : datetime"
msgstr ""

#: ../../source/interactive.rst:58
msgid "**注意**\\ ：在重新 setup room 后，ODPS 入口对象并不会自动替换，需要再次调用 enter() 以获得新的 Room 对象。"
msgstr ""

#: ../../source/interactive.rst:60
msgid "我们可以把常用的ODPS表或者资源都可以存放在room里。"
msgstr ""

#: ../../source/interactive.rst:65
msgid "room.store('存储表示例', o.get_table('dual'), desc='简单的表存储示例')"
msgstr ""

#: ../../source/interactive.rst:66
msgid "我们可以调用\\ ``display``\\ 方法，来把已经存储的对象以表格的形式打印出来："
msgstr ""

#: ../../source/interactive.rst:71 ../../source/interactive.rst:130
msgid "room.display()"
msgstr ""

#: ../../source/interactive.rst:72
msgid ""
"<div style='padding-bottom: 30px'>\n"
"<table border=\"1\" class=\"dataframe\">\n"
"  <thead>\n"
"    <tr style=\"text-align: right;\">\n"
"      <th>default</th>\n"
"      <th>desc</th>\n"
"    </tr>\n"
"    <tr>\n"
"      <th>name</th>\n"
"      <th></th>\n"
"    </tr>\n"
"  </thead>\n"
"  <tbody>\n"
"    <tr>\n"
"      <th>存储表示例</th>\n"
"      <td>简单的表存储示例</td>\n"
"    </tr>\n"
"    <tr>\n"
"      <th>iris</th>\n"
"      <td>安德森鸢尾花卉数据集</td>\n"
"    </tr>\n"
"  </tbody>\n"
"</table>\n"
"</div>"
msgstr ""

#: ../../source/interactive.rst:99
msgid "我们通过\\ ``room['存储表示例']``\\ ，或者像\\ ``room.iris``\\ ，就可以取出来存储的对象了。"
msgstr ""

#: ../../source/interactive.rst:104
msgid "room['存储表示例']"
msgstr ""

#: ../../source/interactive.rst:121
msgid "删除也很容易，只需要调用drop方法"
msgstr ""

#: ../../source/interactive.rst:126
msgid "room.drop('存储表示例')"
msgstr ""

#: ../../source/interactive.rst:131 ../../source/interactive.rst:224
msgid ""
"<div style='padding-bottom: 30px'>\n"
"<table border=\"1\" class=\"dataframe\">\n"
"  <thead>\n"
"    <tr style=\"text-align: right;\">\n"
"      <th>default</th>\n"
"      <th>desc</th>\n"
"    </tr>\n"
"    <tr>\n"
"      <th>name</th>\n"
"      <th></th>\n"
"    </tr>\n"
"  </thead>\n"
"  <tbody>\n"
"    <tr>\n"
"      <th>iris</th>\n"
"      <td>安德森鸢尾花卉数据集</td>\n"
"    </tr>\n"
"  </tbody>\n"
"</table>\n"
"</div>"
msgstr ""

#: ../../source/interactive.rst:156
msgid "要删除某个room，只需要调用teardown就可以了，不传参数时删除默认room。"
msgstr ""

#: ../../source/interactive.rst:160
msgid "teardown()"
msgstr ""

#: ../../source/interactive.rst:163
msgid "IPython增强"
msgstr ""

#: ../../source/interactive.rst:165
msgid "PyODPS 还提供了 IPython 的插件，来更方便得操作 ODPS。"
msgstr ""

#: ../../source/interactive.rst:167
msgid "首先，针对命令行增强，也有相应的命令。让我们先加载插件："
msgstr ""

#: ../../source/interactive.rst:175
#, python-format
msgid "%load_ext odps"
msgstr ""

#: ../../source/interactive.rst:182
#, python-format
msgid "%enter"
msgstr ""

#: ../../source/interactive.rst:185
msgid "<odps.inter.Room at 0x11341df10>"
msgstr ""

#: ../../source/interactive.rst:188
msgid "此时全局会包含o和odps变量，即ODPS入口。"
msgstr ""

#: ../../source/interactive.rst:198
msgid ""
"o.get_table('dual')\n"
"odps.get_table('dual')"
msgstr ""

#: ../../source/interactive.rst:223
#, python-format
msgid "%stores"
msgstr ""

#: ../../source/interactive.rst:249
msgid "对象名补全"
msgstr ""

#: ../../source/interactive.rst:250
msgid "PyODPS 拓展了 IPython 原有的代码补全功能，支持在书写 ``o.get_xxx`` 这样的语句时，自动补全对象名。"
msgstr ""

#: ../../source/interactive.rst:252
msgid "例如，在 IPython 中输入下列语句（<tab>不是实际输入的字符，而是当所有输入完成后，将光标移动到相应位置， 并按 Tab 键）："
msgstr ""

#: ../../source/interactive.rst:255
msgid "o.get_table(<tab>"
msgstr ""

#: ../../source/interactive.rst:259
msgid "如果已知需要补全对象的前缀，也可以使用"
msgstr ""

#: ../../source/interactive.rst:261
msgid "o.get_table('tabl<tab>"
msgstr ""

#: ../../source/interactive.rst:265
msgid "IPython 会自动补全前缀为 tabl 的表。"
msgstr ""

#: ../../source/interactive.rst:267
msgid "对象名补全也支持补全不同 Project 下的对象名。下列用法都被支持："
msgstr ""

#: ../../source/interactive.rst:269
msgid ""
"o.get_table(project='project_name', name='tabl<tab>\n"
"o.get_table('tabl<tab>', project='project_name')"
msgstr ""

#: ../../source/interactive.rst:274
msgid "如果匹配的对象有多个，IPython 会给出一个列表，其最大长度由 ``options.completion_size`` 给出， 默认为 10。"
msgstr ""

#: ../../source/interactive.rst:279
msgid "SQL命令"
msgstr ""

#: ../../source/interactive.rst:283
msgid "PyODPS 还提供了 SQL 插件，来执行 ODPS SQL。下面是单行 SQL："
msgstr ""

#: ../../source/interactive.rst:291
#, python-format
msgid "%sql select * from pyodps_iris limit 5"
msgstr ""

#: ../../source/interactive.rst:292
msgid ""
"<div style='padding-bottom: 30px'>\n"
"<table border=\"1\" class=\"dataframe\">\n"
"  <thead>\n"
"    <tr style=\"text-align: right;\">\n"
"      <th></th>\n"
"      <th>sepallength</th>\n"
"      <th>sepalwidth</th>\n"
"      <th>petallength</th>\n"
"      <th>petalwidth</th>\n"
"      <th>name</th>\n"
"    </tr>\n"
"  </thead>\n"
"  <tbody>\n"
"    <tr>\n"
"      <th>0</th>\n"
"      <td>5.1</td>\n"
"      <td>3.5</td>\n"
"      <td>1.4</td>\n"
"      <td>0.2</td>\n"
"      <td>Iris-setosa</td>\n"
"    </tr>\n"
"    <tr>\n"
"      <th>1</th>\n"
"      <td>4.9</td>\n"
"      <td>3.0</td>\n"
"      <td>1.4</td>\n"
"      <td>0.2</td>\n"
"      <td>Iris-setosa</td>\n"
"    </tr>\n"
"    <tr>\n"
"      <th>2</th>\n"
"      <td>4.7</td>\n"
"      <td>3.2</td>\n"
"      <td>1.3</td>\n"
"      <td>0.2</td>\n"
"      <td>Iris-setosa</td>\n"
"    </tr>\n"
"    <tr>\n"
"      <th>3</th>\n"
"      <td>4.6</td>\n"
"      <td>3.1</td>\n"
"      <td>1.5</td>\n"
"      <td>0.2</td>\n"
"      <td>Iris-setosa</td>\n"
"    </tr>\n"
"    <tr>\n"
"      <th>4</th>\n"
"      <td>5.0</td>\n"
"      <td>3.6</td>\n"
"      <td>1.4</td>\n"
"      <td>0.2</td>\n"
"      <td>Iris-setosa</td>\n"
"    </tr>\n"
"  </tbody>\n"
"</table>\n"
"</div>"
msgstr ""

#: ../../source/interactive.rst:353
#, python-format
msgid "多行SQL可以使用\\ ``%%sql``\\ 的命令"
msgstr ""

#: ../../source/interactive.rst:365
#, python-format
msgid ""
"%%sql\n"
"\n"
"select * from pyodps_iris\n"
"where sepallength < 5\n"
"limit 5"
msgstr ""

#: ../../source/interactive.rst:366
msgid ""
"<div style='padding-bottom: 30px'>\n"
"<table border=\"1\" class=\"dataframe\">\n"
"  <thead>\n"
"    <tr style=\"text-align: right;\">\n"
"      <th></th>\n"
"      <th>sepallength</th>\n"
"      <th>sepalwidth</th>\n"
"      <th>petallength</th>\n"
"      <th>petalwidth</th>\n"
"      <th>name</th>\n"
"    </tr>\n"
"  </thead>\n"
"  <tbody>\n"
"    <tr>\n"
"      <th>0</th>\n"
"      <td>4.9</td>\n"
"      <td>3.0</td>\n"
"      <td>1.4</td>\n"
"      <td>0.2</td>\n"
"      <td>Iris-setosa</td>\n"
"    </tr>\n"
"    <tr>\n"
"      <th>1</th>\n"
"      <td>4.7</td>\n"
"      <td>3.2</td>\n"
"      <td>1.3</td>\n"
"      <td>0.2</td>\n"
"      <td>Iris-setosa</td>\n"
"    </tr>\n"
"    <tr>\n"
"      <th>2</th>\n"
"      <td>4.6</td>\n"
"      <td>3.1</td>\n"
"      <td>1.5</td>\n"
"      <td>0.2</td>\n"
"      <td>Iris-setosa</td>\n"
"    </tr>\n"
"    <tr>\n"
"      <th>3</th>\n"
"      <td>4.6</td>\n"
"      <td>3.4</td>\n"
"      <td>1.4</td>\n"
"      <td>0.3</td>\n"
"      <td>Iris-setosa</td>\n"
"    </tr>\n"
"    <tr>\n"
"      <th>4</th>\n"
"      <td>4.4</td>\n"
"      <td>2.9</td>\n"
"      <td>1.4</td>\n"
"      <td>0.2</td>\n"
"      <td>Iris-setosa</td>\n"
"    </tr>\n"
"  </tbody>\n"
"</table>\n"
"</div>"
msgstr ""

#: ../../source/interactive.rst:427
msgid "如果想执行参数化SQL查询，则需要替换的参数可以使用\\ ``:参数``\\ 的方式。"
msgstr ""

#: ../../source/interactive.rst:444
#, python-format
msgid ""
"In [1]: %load_ext odps\n"
"\n"
"In [2]: mytable = 'dual'\n"
"\n"
"In [3]: %sql select * from :mytable\n"
"|==========================================|   1 /  1  (100.00%)         "
"2s\n"
"Out[3]:\n"
"   c_int_a  c_int_b  c_double_a  c_double_b  c_string_a  c_string_b "
"c_bool_a  \\\n"
"0        0        0       -1203           0           0       -1203     "
"True\n"
"\n"
"  c_bool_b         c_datetime_a         c_datetime_b\n"
"0    False  2012-03-30 23:59:58  2012-03-30 23:59:59"
msgstr ""

#: ../../source/interactive.rst:445
#, python-format
msgid "设置SQL运行时参数，可以通过 ``%set`` 设置到全局，或者在sql的cell里用SET进行局部设置。"
msgstr ""

#: ../../source/interactive.rst:452
#, python-format
msgid ""
"In [17]: %%sql\n"
"         set odps.sql.mapper.split.size = 16;\n"
"         select * from pyodps_iris;"
msgstr ""

#: ../../source/interactive.rst:453
msgid "这个会局部设置，不会影响全局的配置。"
msgstr ""

#: ../../source/interactive.rst:458
#, python-format
msgid "In [18]: %set odps.sql.mapper.split.size = 16"
msgstr ""

#: ../../source/interactive.rst:459
msgid "这样设置后，后续运行的SQL都会使用这个设置。"
msgstr ""

#: ../../source/interactive.rst:463
msgid "持久化 pandas DataFrame 到 ODPS 表"
msgstr ""

#: ../../source/interactive.rst:466
msgid "PyODPS 还提供把 pandas DataFrame 上传到 ODPS 表的命令:"
msgstr ""

#: ../../source/interactive.rst:474
msgid ""
"import pandas as pd\n"
"import numpy as np\n"
"\n"
"df = pd.DataFrame(np.arange(9).reshape(3, 3), columns=list('abc'))"
msgstr ""

#: ../../source/interactive.rst:478
msgid "%persist df pyodps_pandas_df"
msgstr ""

#: ../../source/interactive.rst:479
msgid "这里的第0个参数\\ ``df``\\ 是前面的变量名，\\ ``pyodps_pandas_df``\\ 是ODPS表名。"
msgstr ""

#: ../../source/interactive.rst:482
msgid "Jupyter Notebook 增强"
msgstr ""

#: ../../source/interactive.rst:484
msgid "PyODPS 针对 Jupyter Notebook 下的探索性数据分析进行了增强，包括结果探索功能以及进度展示功能。"
msgstr ""

#: ../../source/interactive.rst:487
msgid "结果探索"
msgstr ""

#: ../../source/interactive.rst:488
msgid ""
"PyODPS 在 Jupyter Notebook 中为 SQL Cell 和 DataFrame "
"提供了数据探索功能。对于已拉到本地的数据，可使用交互式的数据探索工具 浏览数据，交互式地绘制图形。"
msgstr ""

#: ../../source/interactive.rst:491
msgid ""
"当执行结果为 DataFrame 时，PyODPS 会读取执行结果，并以分页表格的形式展示出来。单击页号或前进 / 后退按钮可在数据中导航， "
"如下图。"
msgstr ""

#: ../../source/interactive.rst:495
msgid ".. image:: _static/dfview-data-grid.png"
msgstr ""

#: ../../source/interactive.rst:496
msgid "结果区的顶端为模式选择区。除数据表外，也可以选择柱状图、饼图、折线图和散点图。下图为使用默认字段选择（即前三个字段） 绘制的散点图。"
msgstr ""

#: ../../source/interactive.rst:500
msgid ".. image:: _static/dfview-scatter.png"
msgstr ""

#: ../../source/interactive.rst:501
msgid ""
"在绘图模式下，单击右上角的配置按钮可以修改图表设置。如下图中，将 name 设置为分组列，X 轴选择为 petallength，Y 轴选择为 "
"petalwidth，则图表变为下图。可见在 petallength - petalwidth 维度下，数据对 name 有较好的区分度。"
msgstr ""

#: ../../source/interactive.rst:505
msgid ".. image:: _static/dfview-scatter-opts.png"
msgstr ""

#: ../../source/interactive.rst:506
msgid ""
"对于柱状图和饼图，值字段支持选择聚合函数。PyODPS 对柱状图的默认聚合函数为 sum，对饼图则为 count。如需修改聚合函数， "
"可在值字段名称后的聚合函数名上单击，此后选择所需的聚合函数即可。"
msgstr ""

#: ../../source/interactive.rst:509
msgid "对于折线图，需要避免 X 轴包含空值，否则图像可能不符合预期。"
msgstr ""

#: ../../source/interactive.rst:512
msgid ".. image:: _static/dfview-pie-aggsel.png"
msgstr ""

#: ../../source/interactive.rst:513
msgid "完成绘图后，可单击“下载”保存绘制的图表。"
msgstr ""

#: ../../source/interactive.rst:517
msgid "**注意**\\ ：使用此功能需要安装 Pandas ，并保证 ipywidgets 被正确安装。"
msgstr ""

#: ../../source/interactive.rst:520
msgid "进度展示"
msgstr ""

#: ../../source/interactive.rst:522
#, python-format
msgid ""
"大型作业执行通常需要较长的时间，因而 PyODPS 提供了进度展示功能。当 DataFrame、机器学习作业或通过 %sql 编写的 SQL "
"语句在 Jupyter Notebook 中执行作业时，会显示当前正在执行的作业列表及总体进度，如下图："
msgstr ""

#: ../../source/interactive.rst:526
msgid ".. image:: _static/progress_example.png"
msgstr ""

#: ../../source/interactive.rst:527
msgid "当点击某个作业名称上的链接时，会弹出一个对话框，显示该作业中每个 Task 的具体执行进度，如图："
msgstr ""

#: ../../source/interactive.rst:530
msgid ".. image:: _static/task_details_dialog.png"
msgstr ""

#: ../../source/interactive.rst:531
msgid "当作业运行成功后，浏览器将给出提醒信息，告知作业是否成功："
msgstr ""

#: ../../source/interactive.rst:533
msgid ".. image:: _static/exec_notify.png"
msgstr ""

